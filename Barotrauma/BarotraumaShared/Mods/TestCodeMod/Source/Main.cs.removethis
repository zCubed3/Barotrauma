using System;

using Barotrauma;
using Barotrauma.Extensions;

using HarmonyLib;

using System.Linq;

namespace TestMod
{
    public class BarotraumaTestMod
    {
        [ModInitMethod]
        public static void Init() 
        {
            Harmony harmony = new Harmony("Barotrauma.TestMod");
            harmony.PatchAll(System.Reflection.Assembly.GetExecutingAssembly());

            DebugConsole.NewMessage("TestMod init");

            DebugConsole.Commands.Add(new DebugConsole.Command("grav_set", "Changes gravity based on the given x and y", (string[] args) =>
            {
                if (args.Length >= 2)
                {
                    float x, y;
                    if (float.TryParse(args[0], out x) && float.TryParse(args[1], out y))
                    {
                        GameMain.World.Gravity = new Microsoft.Xna.Framework.Vector2(x, y);
                        DebugConsole.NewMessage($"Gravity is now {GameMain.World.Gravity}");
                    }
                }
            }
            ));

            DebugConsole.Commands.Add(new DebugConsole.Command("grav_reset", "Resets gravity to its default", (string[] args) =>
            {
                GameMain.World.Gravity = new Microsoft.Xna.Framework.Vector2(0f, -9.80665f);
            }
            ));
        }
    }

    [HarmonyPatch(typeof(Barotrauma.Character), MethodType.Constructor, typeof(CharacterPrefab), typeof(string), typeof(Microsoft.Xna.Framework.Vector2), typeof(string), typeof(CharacterInfo), typeof(ushort), typeof(bool), typeof(RagdollParams))]
    public class CharacterPatch
    {
        public static void Postfix(Character __instance)
        {
            __instance.OnDeath += (character, causeOfDeath) =>
            {
                if (character is Character _character)
                {
                    _character.AnimController.Limbs.ForEach((limb) => { _character.TrySeverLimbJoints(limb, 100.0f, 100.0f, true); });
                    GameMain.GameSession.CrewManager.AddSinglePlayerChatMessage($"{_character.Name}", "Kaboom!", Barotrauma.Networking.ChatMessageType.Dead, _character);
                }
            };
        }
    }
}
